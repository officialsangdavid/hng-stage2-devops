worker_processes 1;
events { worker_connections 1024; }

http {
  upstream backend {
    # Blue (active)
    server app_blue:80 max_fails=1 fail_timeout=2s;
    # Green (backup)
    server app_green:80 backup;
  }

  server {
    listen 80;

    location / {
      proxy_pass http://backend;

      # Fast failure detection
      proxy_connect_timeout 1s;
      proxy_read_timeout 2s;
      proxy_send_timeout 2s;

      # Retry on failure or timeout
      proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
      proxy_next_upstream_tries 2;

      # Preserve headers from app
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass_header X-App-Pool;
      proxy_pass_header X-Release-Id;
    }

    # Optional: health check route (if you want to test manually)
    location /healthz {
      return 200 'ok';
      add_header Content-Type text/plain;
    }
  }
}

